buildscript {
  ext {
    springBootVersion = "2.2.0.RELEASE"
    springCloudVersion = "Hoxton.RELEASE"
    gradlePath = "${rootProject.projectDir}/gradle"
  }

  repositories {
    mavenCentral()
    gradlePluginPortal()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
    classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:${jibVersion}"
  }
}

allprojects {
  apply plugin: "java"

  group = "clustercamp"

  sourceCompatibility = "11"

  repositories {
    mavenCentral()
  }
}

subprojects {
  apply plugin: "org.springframework.boot"
  apply plugin: "io.spring.dependency-management"

  configurations {
    developmentOnly
    runtimeClasspath {
      extendsFrom developmentOnly
    }
    compileOnly {
      extendsFrom annotationProcessor
    }

    compile.exclude module: 'spring-boot-starter-tomcat'
  }

  dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "io.projectreactor:reactor-test"
  }

  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
  }

  test {
    useJUnitPlatform()
  }
}

apply from: "${gradlePath}/api.gradle"
apply from: "${gradlePath}/docker.gradle"
